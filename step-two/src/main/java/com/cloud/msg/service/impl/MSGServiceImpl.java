package com.cloud.msg.service.impl;import com.alibaba.fastjson.JSONObject;import com.aliyun.dysmsapi20170525.Client;import com.aliyun.dysmsapi20170525.models.SendSmsRequest;import com.aliyun.dysmsapi20170525.models.SendSmsResponse;import com.aliyun.teaopenapi.models.Config;import com.cloud.msg.service.MSGService;import com.cloud.msg.util.HttpUtils;import com.cloud.msg.util.RandomUtil;import com.cloud.redis.util.RedisUtils;import com.google.gson.Gson;import lombok.SneakyThrows;import org.dom4j.Document;import org.dom4j.DocumentHelper;import org.dom4j.Element;import org.springframework.stereotype.Service;import org.springframework.util.ObjectUtils;import org.springframework.util.StringUtils;import javax.annotation.Resource;import java.net.URLEncoder;import java.util.HashMap;import java.util.List;/** * @Author zhouTao * @Date 2023/2/21 */@Servicepublic class MSGServiceImpl implements MSGService {    @Resource    private RedisUtils redisUtils;    @Override    public boolean send(HashMap map, String phone) {        if(StringUtils.isEmpty(phone)) return false;        Config config = new Config()                // 您的AccessKey ID                .setAccessKeyId("LTAI4G7nRizWr6666RfgSys")                // 您的AccessKey Secret	（这两个还不知道的去我前两次关于阿里云的有教程哪里找）                .setAccessKeySecret("n9TuOpZP77777kZusepek");        // 访问的域名（这个不用变都是这个）        config.endpoint = "dysmsapi.aliyuncs.com";        Client client;        try {            client = new Client(config);            SendSmsRequest request = new SendSmsRequest();            request.setSignName("阿里云短信测试");//签名名称            request.setTemplateCode("SMS_154950000");//模版Code            request.setPhoneNumbers("1991470000");//电话号码            //这里的参数是json格式的字符串            request.setTemplateParam(JSONObject.toJSONString(map));            SendSmsResponse response = client.sendSms(request);            System.out.println("发送成功："+new Gson().toJson(response));            return true;        } catch (Exception e) {            e.printStackTrace();            return false;        }    }    @SneakyThrows    @Override    public boolean sendSms(String phone) {        String prefix = "wx:cache:";        String sixBitRandom = RandomUtil.getSixBitRandom();        Object o = redisUtils.get(prefix + phone);        System.out.println("value:" + o);        if (!ObjectUtils.isEmpty(o)) {            return false;        }        redisUtils.set(prefix + phone, sixBitRandom,3 * 20);        String content = "【凯东源公众号】您的验证码为 " + sixBitRandom + ",有效期为 3 分钟, 请确保是本人操作, 不要把验证码泄露给其他人。";        final String url = "http://open.yitd.cn/sms/sendUTF8";        String param = url + "?password=kOqmIr&mobile=" + phone + "&action=send&userid=804063&account=804063&content=" + URLEncoder.encode(content);        String mag = HttpUtils.sendGet(param);        System.out.println("返回信息:" + mag);        if (mag.indexOf("提交成功") >= 0) {            return true;        }        return false;    }    @Override    public boolean send(String content, String phone) {        return false;    }    /**     * 短信发送解析是否成功     *     * @param xml     * @return     * @throws Exception     */    public String analyzeXml(String xml) throws Exception {        Document document = DocumentHelper.parseText(xml);        // 获取根节点元素对象        Element root = document.getRootElement();        // 获取该元素下所有子元素        List<Element> listElement = root.elements();        String status = "";        String mag = "";        for (Element e : listElement) {            if (StringUtils.pathEquals(e.getName(), "returnstatus")) {                status = e.getStringValue();            }            if (StringUtils.pathEquals(e.getName(), "message")) {                mag = e.getStringValue();            }        }        if (StringUtils.pathEquals(status, "Success")) {            return "Success";        } else {            return mag;        }    }}