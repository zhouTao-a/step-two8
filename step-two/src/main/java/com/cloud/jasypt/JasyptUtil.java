package com.cloud.jasypt;import org.jasypt.encryption.pbe.PooledPBEStringEncryptor;import org.jasypt.encryption.pbe.config.SimpleStringPBEConfig;/** * 加解密工具类 **/public class JasyptUtil {    /**     * Jasypt生成加密结果     *     * @param password 配置文件中设定的加密盐值     * @param value    加密值     * @return 加密结果     */    public static String encryptPwd(String password, String value) {        PooledPBEStringEncryptor encryptor = new PooledPBEStringEncryptor();        encryptor.setConfig(crypto(password));        return encryptor.encrypt(value);    }    /**     * 解密     *     * @param password 配置文件中设定的加密盐值     * @param value    解密密文     * @return 解密     */    public static String decryptPod(String password, String value) {        PooledPBEStringEncryptor encryptor = new PooledPBEStringEncryptor();        encryptor.setConfig(crypto(password));        return encryptor.decrypt(value);    }    public static SimpleStringPBEConfig crypto(String password) {        SimpleStringPBEConfig config = new SimpleStringPBEConfig();        config.setPassword(password);        config.setAlgorithm("PBEWithMD5AndDES");        config.setKeyObtentionIterations("1000");        config.setPoolSize("1");        config.setProviderName("SunJCE");        config.setSaltGeneratorClassName("org.jasypt.salt.RandomSaltGenerator");        config.setStringOutputType("base64");        return config;    }    public static void main(String[] args) {        String slat = "jIYZi2Xf1p";        // 加密        String encPwd = encryptPwd(slat, "qaz123WSX");        // 解密        String decPwd = decryptPod(slat, encPwd);        System.out.println(encPwd);        System.out.println(decPwd);    }}