package com.cloud.msg.util;import org.apache.http.HttpEntity;import org.apache.http.NameValuePair;import org.apache.http.client.entity.UrlEncodedFormEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.client.methods.HttpPost;import org.apache.http.entity.StringEntity;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClients;import org.apache.http.message.BasicNameValuePair;import org.apache.http.util.EntityUtils;import java.io.IOException;import java.util.ArrayList;import java.util.List;/** * * * @Author zhouTao * @Date 2023/2/21 */public class HttpUtils {    public static void main(String[] args) throws IOException {        CloseableHttpClient httpClient = HttpClients.createDefault();        try {            HttpGet request = new HttpGet("https://httpbin.org/get");            // add request headers//            request.addHeader("custom-key", "mkyong");//            request.addHeader(HttpHeaders.USER_AGENT, "Googlebot");            CloseableHttpResponse response = httpClient.execute(request);            try {                // Get HttpResponse Status                System.out.println(response.getProtocolVersion());              // HTTP/1.1                System.out.println(response.getStatusLine().getStatusCode());   // 200                System.out.println(response.getStatusLine().getReasonPhrase()); // OK                System.out.println(response.getStatusLine().toString());        // HTTP/1.1 200 OK                HttpEntity entity = response.getEntity();                if (entity != null) {                    // return it as a String                    String result = EntityUtils.toString(entity);                    System.out.println(result);                }            } finally {                response.close();            }        } finally {            httpClient.close();        }    }    /**     * 发送get请求     * @param url 地址     * @return 结果     * @throws IOException     * @url  https://mkyong.com/java/apache-httpclient-examples/     */    public static String sendGet(String url) throws IOException {        CloseableHttpClient httpClient = HttpClients.createDefault();        String result = null;        try {            HttpGet request = new HttpGet(url);            CloseableHttpResponse response = httpClient.execute(request);            try {                HttpEntity entity = response.getEntity();                if (entity != null) {                    result = EntityUtils.toString(entity);                }            } finally {                response.close();            }        } finally {            httpClient.close();        }        return result;    }    private static String sendPOST(String url) throws IOException {        String result = "";        HttpPost post = new HttpPost(url);        // add request parameters or form parameters        List<NameValuePair> urlParameters = new ArrayList<>();        urlParameters.add(new BasicNameValuePair("username", "abc"));        urlParameters.add(new BasicNameValuePair("password", "123"));        urlParameters.add(new BasicNameValuePair("custom", "secret"));        post.setEntity(new UrlEncodedFormEntity(urlParameters));        try (CloseableHttpClient httpClient = HttpClients.createDefault();             CloseableHttpResponse response = httpClient.execute(post)){            result = EntityUtils.toString(response.getEntity());        }        return result;    }    public static String sendJSONPOST(String url, String jsonStr) throws IOException {        String result = "";        HttpPost post = new HttpPost(url);        post.setEntity(new StringEntity(jsonStr));        try (CloseableHttpClient httpClient = HttpClients.createDefault();             CloseableHttpResponse response = httpClient.execute(post)) {            result = EntityUtils.toString(response.getEntity());        }        return result;    }}